% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/restrictions.R
\name{reduce_nodal_types}
\alias{reduce_nodal_types}
\title{Restrict a model}
\usage{
reduce_nodal_types(model, restrictions = NULL, dos = NULL)
}
\arguments{
\item{model}{a model created by make_model()}

\item{restrictions}{a list of character vectors. Names in list should match dag's variables. Restrictions are specificified by as nodal types.}
}
\value{
A dag with restrictions and nodal types saved as attributes.
}
\description{
Restrict causal types. If priors exist prior probabilities are redistributed over remaining types.
}
\examples{
XYdag <- make_model(add_edges(parent = "X", children = c("Y")))
# restrictions can be specified following nodal_types syntax
reduce_nodal_types(model = XYdag, restrictions = list(X = "X0", Y = "Y00"))

# or alternatively variable name can be omitted from restriction
reduce_nodal_types(dag = XYdag, restrictions = list(X = "0", Y = "00"))

# A particularly important restriction is the do operator that removes all but one nodal_type from a node
reduce_nodal_types(model = XYdag, dos = list(X = 1))
reduce_nodal_types(model = XYdag, dos = list(Y = 0))

# Restrictions can be iteratively applied
my_model <-  reduce_nodal_types(model = XYdag, restrictions = list(Y = "10"))
my_model <-  reduce_nodal_types(model = my_model, do = list(X = 1))
get_indicator_matrix(my_model)

# Restrictions can be  with wildcards
my_model <-  reduce_nodal_types(model = XYdag, restrictions = list(Y = "?0"))
get_indicator_matrix(my_model)
}
