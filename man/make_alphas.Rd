% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/priors.R
\name{make_alphas}
\alias{make_alphas}
\title{Make alphas}
\usage{
make_alphas(model, alphas = NULL)
}
\arguments{
\item{model}{A model object generated by \code{make_model()}.}

\item{alphas}{A numeric vector. Hyperparameters of the Dirichlet distribution to be passed to \code{make_priors()}.}
}
\description{
Stipulated alpha values override prior_distribution
}
\examples{
require(dplyr)
model <- make_model("X -> Y")
# Default sets all priors to 1
make_alphas(model = model)
# Set all priors to 0.5
make_alphas(model = model, prior_distribution = "jeffreys")
# Set all priors to infinity
make_alphas(model = model, prior_distribution = "certainty")
# Set all priors to 1 except for prior of nodal_type X0
make_alphas(model = model, alphas = list(X = c(X0 = 2)))
# Specify priors using query
make_alphas(model = model,
						alphas = c(`(Y[X=1] == Y[X=0])` = 3, `X == 1` = 3))
# Specify priors for each of the nodal_types in model
make_alphas(model = model,
alphas = list(X = c(X0 = 2, `X == 1` = 3),
Y = c(`(Y[X=1] > Y[X=0])` = 3,
Y10 = 2, `(Y[X=1] == Y[X=0])` = 3)))
# set all priors to 10
make_alphas(model = model, alphas =  10)
# If the prior for a given parameter is duplicated,
# make_prior throws an informative error.
\dontrun{
make_alphas(model = model,
alphas = list(X = c(X0 = 2, `X == 1` = 3),
Y = c(Y00 = 1, `(Y[X=1] > Y[X=0])` = 3,
Y01 = 2, `(Y[X=1] == Y[X=0])` = 3)))
}

# Priors of confounded models
model <- make_model("X -> Y") \%>\%
set_confound(list(X = "(Y[X=1]>Y[X=0])"))

# Simultaneously set priors for confound and nonconfound parameters.
make_alphas(model = model,  alphas =  c(`(X == 0)` = 2))
# To target variable modeling confound, specify the condition
# that determines the confounded relationship between variables
make_alphas(model = model,  alphas =  c(`(X == 0) & (Y[X=1]>Y[X=0])` = 2))
}
