% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/priors.R
\name{make_priors}
\alias{make_priors}
\title{Make priors}
\usage{
make_priors(model, prior_distribution = "uniform", alphas = NULL)
}
\arguments{
\item{model}{A model created by \code{make_model()}}

\item{prior_distribution}{A character indicating the prior distribuiton}

\item{alphas}{the hyperparameters of the dirichlet distribution.
Stipulated alpha values override prior_distribution}
}
\description{
Make priors
}
\examples{
XYmodel <- make_model("X -> Y")
#  Default sets all priors to 1
make_priors(model = XYmodel)
#  Set all priors to 0.5
make_priors(model = XYmodel, prior_distribution = "jeffreys")
#  Set all priors to infinity
make_priors(model = XYmodel, prior_distribution = "certainty")
#  set all priors to 1 except for prior of nodal_type X0
make_priors(model = XYmodel, alphas = list(X = c(X0 = 2)))
# Specify priors by query
 make_priors(model = XYmodel,
             alphas = c(`(Y[X=1] == Y[X=0])`  = 3,  `X == 1` = 3  ))
#  specify priors for each of the nodal_types in model
make_priors(model = XYmodel,
           alphas = list(X = c(X0 = 2, `X == 1` = 3),  Y = c(`(Y[X=1] > Y[X=0])` = 3, Y10 = 2, `(Y[X=1] == Y[X=0])`  = 3)))
# set all priors to 10
make_priors(model = XYmodel, alphas =  10)
# If the prior for a given parameter is duplicated, \\code{make_prior} throws an informative error.
\dontrun{
make_priors(model = XYmodel,
           alphas = list(X = c(X0 = 2, `X == 1` = 3),  Y = c(Y00 = 1, `(Y[X=1] > Y[X=0])` = 3, Y01 = 2, `(Y[X=1] == Y[X=0])`  = 3)))
}

# Priors of confounded models
model <- make_model("X -> Y") \%>\%
set_confound(list(X = "(Y[X=1]>Y[X=0])"))

# Simultaneously set priors for confound and nonconfound parameters.
#' make_priors(model = model,  alphas =  c(`(X == 0)  = 2))
# To target variable modeling confound, specify the condition that determines the confounded relationship between X and Y
make_priors(model = model,  alphas =  c(`(X == 0) & (Y[X=1]>Y[X=0])` = 2))
# set prior for all parameter that correspond to query
}
